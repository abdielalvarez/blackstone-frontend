[{"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/index.js":"1","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/reportWebVitals.js":"2","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/index.js":"3","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/routes/index.js":"4","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/reducers/index.js":"5","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/layouts/home/index.js":"6","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/layouts/signUp/index.js":"7","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/reducers/user.js":"8","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/actions/user.js":"9","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Navbar/index.js":"10","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Forms/SignUpForm/index.js":"11","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Forms/SignInForm/index.js":"12","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/utils/validations.js":"13","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/reducers/tasks.js":"14","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/actions/tasks.js":"15","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/TaskItem/index.js":"16","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/layouts/tasks/index.js":"17","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Forms/TaskForm/index.js":"18"},{"size":636,"mtime":1610844125000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610840466000,"results":"21","hashOfConfig":"20"},{"size":898,"mtime":1610843977000,"results":"22","hashOfConfig":"20"},{"size":1008,"mtime":1612732807000,"results":"23","hashOfConfig":"20"},{"size":193,"mtime":1612688863000,"results":"24","hashOfConfig":"20"},{"size":3934,"mtime":1612739540000,"results":"25","hashOfConfig":"20"},{"size":5041,"mtime":1612740584000,"results":"26","hashOfConfig":"20"},{"size":400,"mtime":1610849953000,"results":"27","hashOfConfig":"20"},{"size":2663,"mtime":1612740584000,"results":"28","hashOfConfig":"20"},{"size":2720,"mtime":1612686964000,"results":"29","hashOfConfig":"20"},{"size":4920,"mtime":1612729468000,"results":"30","hashOfConfig":"20"},{"size":3287,"mtime":1612729468000,"results":"31","hashOfConfig":"20"},{"size":1849,"mtime":1612733223000,"results":"32","hashOfConfig":"20"},{"size":1003,"mtime":1612738908000,"results":"33","hashOfConfig":"20"},{"size":4615,"mtime":1612739862000,"results":"34","hashOfConfig":"20"},{"size":1752,"mtime":1612742677000,"results":"35","hashOfConfig":"20"},{"size":3860,"mtime":1612739862000,"results":"36","hashOfConfig":"20"},{"size":2830,"mtime":1612739862000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"10f78ua",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/index.js",[],["81","82"],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/reportWebVitals.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/index.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/routes/index.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/reducers/index.js",["83"],"import { combineReducers } from \"redux\";\nimport user from '../reducers/user';\nimport tasks from '../reducers/tasks';\n\nexport default () => \n   combineReducers({\n      user,\n      tasks,\n   });\n","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/layouts/home/index.js",["84"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, List, Button, CircularProgress } from '@material-ui/core';\nimport { getTasks, getTask, deleteTask } from '../../store/actions/tasks';\nimport TaskItem from '../../components/TaskItem';\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '20px 0 0',\n    },\n    list: {\n        width: '100%',\n        maxWidth: 768,\n    },\n    title: {\n        margin: '0 0 20px',\n    },\n    Button: {\n        maxWidth: 768,\n        width: '100%',\n        height: 40,\n        margin: '0 0 20px',\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none',\n        '&:hover': {\n            color: 'white',\n            textDecoration: 'none',\n        }\n    },\n    loader: {\n        width: 22,\n        height: 22,\n        display: 'flex',\n        margin: '5px 0 0',\n    }\n});\n\nconst Home = ({ user, getTasks, tasks, getTask, deleteTask }) => {\n\n    const history = useHistory()\n    const classes = useStyles()\n\n    const [didRender, setDidRender] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/sign-in')\n        } else if (!didRender) {\n            getTasks(user._id)\n            setDidRender(true)\n        }\n    }, [tasks])\n\n    const handleDelete = async body => {\n        try {\n            setLoading(true)\n            await deleteTask(body, tasks)\n            await getTasks(user._id)\n            setLoading(false)\n        } catch (error) {\n            console.log('error', error);\n            setLoading(false)\n        }\n    }\n\n    const handleGetTask = async id => {\n        try {\n            setLoading(true)\n            await getTask(id)\n            history.push(`/edit/${id}`)\n            setLoading(false)\n        } catch (error) {\n            console.log('error', error);\n            setLoading(false)\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.title} variant=\"h4\">\n                Lista de tareas\n            </Typography>\n\n            <Link className={classes.link} to=\"/add\">\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    classes={{ root: classes.Button }}\n                >\n                    Add New Task\n                </Button>\n            </Link>\n\n            {loading ?\n                <div>\n                    <CircularProgress\n                        classes={{ root: classes.loader }}\n                        color=\"secondary\"\n                    />\n                </div> : null\n            }\n\n            {tasks && tasks.length > 0 ?\n                <List classes={{ root: classes.list }}>\n                    {tasks.map((elem) => {\n                        return (\n                            <TaskItem\n                                key={elem._id}\n                                body={elem}\n                                handleDelete={handleDelete}\n                                handleEdit={handleGetTask}\n                                loading={loading}\n                            />\n                        )\n                    })}\n                </List> : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.user && state.user.user ? state.user.user : null,\n    tasks: state.tasks && state.tasks.tasks ? state.tasks.tasks : null\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getTasks: id => dispatch(getTasks(id)),\n    getTask: id => dispatch(getTask(id)),\n    deleteTask: (body, tasks) => dispatch(deleteTask(body, tasks)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/layouts/signUp/index.js",["85"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { signInValidation, signUpValidation } from '../../utils/validations';\nimport { createUser, loginUser } from '../../store/actions/user';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\nimport SignUpForm from '../../components/Forms/SignUpForm';\nimport SignInForm from '../../components/Forms/SignInForm';\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '20px 0 0',\n    },\n    link: {\n        color: '#27417c',\n        textDecoration: 'none',\n        '&:hover': {\n            color: '#27417c',\n            textDecoration: 'none',\n        }\n    }\n});\n\nconst SignUp = ({\n    createUser,\n    loginUser,\n    user\n}) => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const [ loading, setLoading ] = useState(false)\n\n    const classes = useStyles()\n\n    const route = location.pathname && location.pathname.includes('sign-in') ? 'sign-in' : 'sign-up'\n\n    useEffect(() => {\n        if (user) {\n            history.push('/')\n        }\n    }, [])\n\n    const handleSignUp = async (values, { resetForm, setFieldError, setSubmitting }) => {\n        setSubmitting(false);\n        setLoading(true)\n        const { name, email, password, confirmPassword } = values;\n        if (password === confirmPassword) {\n            const body = {\n                name,\n                email,\n                password\n            }\n            try {\n                await createUser(body)\n                resetForm()\n                setLoading(false)\n                history.push('/sign-in')\n            } catch (error) {\n                console.log('error sign up', error);\n                if (error === 'Contraseña incorrecta') {\n                    setFieldError(\n                        'password',\n                        error === 'Contraseña incorrecta' ?\n                        'Incorrect email or password' : 'An error ocurred'\n                    );\n                } else {\n                    setFieldError('email', error);\n                }\n            }\n        } else {\n            setFieldError(\n                'confirmPassword',\n                'Password and confirm password do not match'\n            );\n        }\n        setLoading(false)\n        setSubmitting(true);\n    }\n\n    const handleSignIn = async (values, { resetForm, setFieldError, setSubmitting }) => {\n        setSubmitting(false);\n        setLoading(true)\n        const { email, password } = values;\n        const body = {\n            email,\n            password\n        }\n        try {\n            await loginUser(body)\n            resetForm()\n            setLoading(false)\n            history.push('/')\n        } catch (error) {\n            setFieldError(\n                'password',\n                'Probably user or password is incorrect'\n            );\n        }\n        setLoading(false)\n        setSubmitting(true);\n    }\n\n    const initialSignUpValues = {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    }\n\n    const initialSignInValues = {\n        email: '',\n        password: '',\n    }\n\n    return (\n        <>\n            <div className={classes.container}>\n                <Typography variant=\"h3\" component=\"h4\">\n                    {route === 'sign-up' ?\n                        'Sign up here' : 'Sign in here'\n                    }\n                </Typography>\n\n                {route === 'sign-up' ?\n                    <Link className={classes.link} to=\"/sign-in\">\n                        If you have an account, sign in!\n                    </Link> :\n                    <Link className={classes.link} to=\"/sign-up\">\n                        If you don't have an account, sign up!\n                    </Link>\n                }\n            </div>\n\n            {route === 'sign-up' ?\n                <Formik\n                    initialValues={initialSignUpValues}\n                    validationSchema={signUpValidation}\n                    onSubmit={handleSignUp}\n                >\n                    {props => <SignUpForm {...props} loading={loading} />}\n                </Formik> :\n                <Formik\n                    initialValues={initialSignInValues}\n                    validationSchema={signInValidation}\n                    onSubmit={handleSignIn}\n                >\n                    {props => <SignInForm {...props} loading={loading} />}\n                </Formik>\n            }\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.user && state.user.user ? state.user.user : null\n})\n\nconst mapDispatchToProps = dispatch => ({\n    createUser: body => dispatch(createUser(body)),\n    loginUser: body => dispatch(loginUser(body))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/reducers/user.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/actions/user.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Navbar/index.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Forms/SignUpForm/index.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Forms/SignInForm/index.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/utils/validations.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/reducers/tasks.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/store/actions/tasks.js",["86"],"import axios from 'axios';\n\nexport const GET_TASKS = 'GET_TASKS';\nexport const GET_TASK = 'GET_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n\nconst options = {\n    headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\"\n    },\n}\n\nconst SERVICE_URL = 'https://blackstone-backend.herokuapp.com/api/'\n\nconst gettingTasks = data => {\n    return {\n        type: GET_TASKS,\n        data\n    }\n}\n\nconst gettingTask = data => {\n    return {\n        type: GET_TASK,\n        data\n    }\n}\n\nconst updateTask = data => {\n    return {\n        type: UPDATE_TASK,\n        data\n    }\n}\n\nconst deletingTask = data => {\n    return {\n        type: DELETE_TASK,\n        data\n    }\n}\n\nexport const getTasks = id => dispatch => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const notesDB = await axios.get(`${SERVICE_URL}notes/get_notes?id=${id}`, options)\n            dispatch(gettingTasks(notesDB.data))\n            resolve(notesDB.data)\n        } catch (error) {\n            let errorCode = 'An error occurred'\n            if (\n                error &&\n                error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) {\n                errorCode = error.response.data.message\n            }\n            dispatch(gettingTasks([]))\n            reject(errorCode)\n        }\n    })\n}\n\nexport const getTask = id => dispatch => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const noteDB = await axios.get(`${SERVICE_URL}notes/get_note?id=${id}`, options)\n            dispatch(gettingTask(noteDB.data))\n            resolve(noteDB.data)\n        } catch (error) {\n            let errorCode = 'An error occurred'\n            if (\n                error &&\n                error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) {\n                errorCode = error.response.data.message\n            }\n            dispatch(gettingTask({\n                name: '',\n                content: '',\n            }))\n            reject(errorCode)\n        }\n    })\n}\n\nexport const editTask = (body, oldList) => dispatch => {\n    return new Promise(async (resolve, reject) => {\n        let noteList = oldList\n        let index = noteList.findIndex(elem => elem._id === body._id)\n        try {\n            const noteDB = await axios.put(`${SERVICE_URL}notes/update_note?id=${body._id}`, body, options)\n            noteList[index] = noteDB.data\n            dispatch(updateTask(noteList))\n            resolve(noteList)\n        } catch (error) {\n            let errorCode = 'An error occurred'\n            if (\n                error &&\n                error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) {\n                errorCode = error.response.data.message\n            }\n            dispatch(updateTask(oldList))\n            reject(errorCode)\n        }\n    })\n}\n\nexport const createTask = (body, oldList) => dispatch => {\n    return new Promise(async (resolve, reject) => {\n        let noteList = oldList\n        try {\n            const noteDB = await axios.post(`${SERVICE_URL}notes/create_note`, body, options)\n            noteList.push(noteDB)\n            dispatch(updateTask(noteList))\n            resolve(noteList)\n        } catch (error) {\n            let errorCode = 'An error occurred'\n            if (\n                error &&\n                error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) {\n                errorCode = error.response.data.message\n            }\n            dispatch(updateTask(oldList))\n            reject(errorCode)\n        }\n    })\n}\n\nexport const deleteTask = (body, oldList) => dispatch => {\n    return new Promise(async (resolve, reject) => {\n        let noteList = oldList.filter(elem => elem._id !== body._id)\n        try {\n            const noteDB = await axios.delete(`${SERVICE_URL}notes/delete_note?id=${body._id}`, options)\n            dispatch(deletingTask(noteList))\n            resolve(noteList)\n        } catch (error) {\n            let errorCode = 'An error occurred'\n            if (\n                error &&\n                error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) {\n                errorCode = error.response.data.message\n            }\n            dispatch(deletingTask(oldList))\n            reject(errorCode)\n        }\n    })\n}\n","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/TaskItem/index.js",[],"/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/layouts/tasks/index.js",["87","88"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { taskValidation } from '../../utils/validations';\nimport { getTask, editTask, createTask } from '../../store/actions/tasks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport TaskForm from '../../components/Forms/TaskForm';\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '20px 0 0',\n    },\n    link: {\n        color: '#27417c',\n        textDecoration: 'none',\n        '&:hover': {\n            color: '#27417c',\n            textDecoration: 'none',\n        }\n    }\n});\n\nconst SignUp = ({\n    getTask,\n    editTask,\n    createTask,\n    user,\n    task,\n    tasks,\n}) => {\n\n    const history = useHistory()\n    const params = useParams()\n\n    const [ loading, setLoading ] = useState(false)\n\n    const classes = useStyles()\n\n    const route = params.id ? 'edit' : 'add'\n\n    const [ taskBody, setTaskBody ] = useState({\n        name: '',\n        content: '',\n    })\n\n    useEffect(() => {\n        if (!user) {\n            history.push('/sign-in')\n        } else if (route === 'edit') {\n            handleGetTask()\n        }\n    }, [])\n\n    const handleGetTask = async () => {\n        try {\n            const data = await getTask(params ? params.id : '')\n            setTaskBody(data)\n            return\n        } catch (error) {\n            history.push('/')\n        }\n    }\n\n    const handleProcessTask = async (values, { resetForm, setFieldError, setSubmitting }) => {\n        setSubmitting(false);\n        setLoading(true)\n        const { name, content } = values;\n        let body = {\n            name,\n            content,\n            _id: task._id\n        }\n        try {\n            if (route === 'edit') {\n                await editTask(body, tasks)\n            } else {\n                body['userId'] = user._id\n                await createTask(body, tasks)\n            }\n            resetForm()\n            setLoading(false)\n            history.push('/')\n        } catch (error) {\n            setFieldError(\n                'name',\n                error ? error : 'An error ocurred'\n            );\n        }\n        setLoading(false)\n        setSubmitting(true);\n    }\n\n    const initialValues = {\n        name: route === 'add' ? '' : task.name,\n        content: route === 'add' ? '' : task.content,\n    }\n\n    return (\n        <>\n            <div className={classes.container}>\n                <Typography variant=\"h3\" component=\"h4\">\n                    {route === 'add' ?\n                        'Add New Task' : 'Edit Task'\n                    }\n                </Typography>\n            </div>\n\n            <Formik\n                initialValues={initialValues}\n                validationSchema={taskValidation}\n                onSubmit={handleProcessTask}\n            >\n                {props =>\n                    <TaskForm\n                        {...props}\n                        loading={loading}\n                        route={route}\n                    />\n                }\n            </Formik> \n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.user && state.user.user ? state.user.user : null,\n    task: state.tasks && state.tasks.task ? state.tasks.task : {\n        name: '',\n        content: ''\n    },\n    tasks: state.tasks && state.tasks.tasks ? state.tasks.tasks : []\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getTask: id => dispatch(getTask(id)),\n    editTask: (body, tasks) => dispatch(editTask(body, tasks)),\n    createTask: (body, tasks) => dispatch(createTask(body, tasks)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","/Volumes/ABDIEL/la-trinidad-de-paginas-web/personal/blackstone/blackstone-frontend/src/components/Forms/TaskForm/index.js",["89"],"import React, { useState } from 'react';\nimport { TextField, Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    TextField: {\n        maxWidth: 768,\n        width: '100%',\n        height: 40,\n        margin: '0 0 60px',\n    },\n    TextFieldBig: {\n        maxWidth: 768,\n        width: '100%',\n        margin: '0 0 60px',\n    },\n    Button: {\n        maxWidth: 768,\n        width: '100%',\n        height: 40,\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '30px 0 20px',\n        '@media screen and (max-width: 768px)': {\n            padding: '0 20px',\n        }\n    },\n    loader: {\n        width: 22,\n        height: 22,\n        display: 'flex',\n        margin: '0 0 0 15px',\n    }\n});\n\nfunction TaskForm({\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    touched,\n    errors,\n    isValid,\n    loading,\n    route,\n}) {\n\n    const classes = useStyles()\n\n    return (\n        <form className={classes.form}>\n            <TextField\n                label=\"Name*\"\n                type=\"text\"\n                name=\"name\"\n                variant=\"outlined\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.name}\n                classes={{ root: classes.TextField }}\n                helperText={touched.name && errors.name ? errors.name : ''}\n                error={touched.name && errors.name ? true : false}\n            />\n\n            <TextField\n                label=\"Description*\"\n                type=\"text\"\n                name=\"content\"\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                value={values.content}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                classes={{ root: classes.TextFieldBig }}\n                helperText={touched.content && errors.content ? errors.content : ''}\n                error={touched.content && errors.content ? true : false}\n            />\n\n            <Button\n                variant=\"contained\"\n                disabled={!isValid || loading}\n                color=\"primary\"\n                classes={{ root: classes.Button }}\n                type=\"submit\"\n                onClick={handleSubmit}\n            >\n                {route === 'add' ?\n                    'Add task' : 'Edit task'\n                }\n                {loading ?\n                    <div>\n                        <CircularProgress\n                            classes={{ root: classes.loader }}\n                            color=\"secondary\"\n                        />\n                    </div> : null\n                }\n            </Button>\n        </form>\n    )\n}\n\nexport default TaskForm;\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":9,"endColumn":7},{"ruleId":"97","severity":1,"message":"98","line":60,"column":8,"nodeType":"99","endLine":60,"endColumn":15,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":48,"column":8,"nodeType":"99","endLine":48,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":145,"column":19,"nodeType":"105","messageId":"106","endLine":145,"endColumn":25},{"ruleId":"103","severity":1,"message":"107","line":46,"column":13,"nodeType":"105","messageId":"106","endLine":46,"endColumn":21},{"ruleId":"97","severity":1,"message":"108","line":57,"column":8,"nodeType":"99","endLine":57,"endColumn":10,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"110","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'didRender', 'getTasks', 'history', and 'user'. Either include them or remove the dependency array. If 'getTasks' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["114"],"no-unused-vars","'noteDB' is assigned a value but never used.","Identifier","unusedVar","'taskBody' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleGetTask', 'history', 'route', and 'user'. Either include them or remove the dependency array.",["115"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [didRender, getTasks, history, tasks, user]",{"range":"122","text":"123"},"Update the dependencies array to be: [history, user]",{"range":"124","text":"125"},"Update the dependencies array to be: [handleGetTask, history, route, user]",{"range":"126","text":"127"},[1516,1523],"[didRender, getTasks, history, tasks, user]",[1315,1317],"[history, user]",[1377,1379],"[handleGetTask, history, route, user]"]